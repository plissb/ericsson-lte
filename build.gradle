import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

plugins {
    id 'java'
    id 'maven-publish'
}

def buildVersion = System.getenv("JB_SPACE_EXECUTION_NUMBER") ?: "LOCAL" + LocalDateTime.now().format(DateTimeFormatter.ISO_DATE_TIME)
def fullVersion = '1.0' + '.' + buildVersion

version fullVersion

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://maven.pkg.jetbrains.space/quantum-soft/p/liberia-mediation/ericsson-lte"
        credentials {
            username = "boris.pliss"
            password = "hyfceG-mucme1-duccim"
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "org.quantum.soft"
            artifactId = "ericsson-lte"
            version = fullVersion
            from components.java
        }
    }
    repositories {
        maven {
            url "https://maven.pkg.jetbrains.space/quantum-soft/p/liberia-mediation/ericsson-lte"
            credentials {
                username = "boris.pliss"
                password = "hyfceG-mucme1-duccim"
            }
        }
    }
}

dependencies {
    implementation group: 'org.openmuc', name: 'jasn1', version: '1.10.0'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'org.openmuc', name: 'jasn1-compiler', version: '1.10.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes(
                "Version": fullVersion,
                "Built-at": LocalDateTime.now().format(DateTimeFormatter.ISO_DATE_TIME),
                "commit-hash": getGitCurrentCommit()
        )
    }
}

def getGitCurrentCommit() {
    def gitDir = "$projectDir/.git/"
    def head = new File(gitDir + "HEAD").text.split(":")
    if( head.length == 1 ) return head[0].trim()
    else return  (new File(gitDir + head[1].trim())).text

}